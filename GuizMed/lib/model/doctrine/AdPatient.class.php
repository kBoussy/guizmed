<?php

/**
 * AdPatient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    GuizMed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class AdPatient extends BaseAdPatient
{
     public function berekenBNF($patient_id)
        {
        $patient_id=$this->getPatientId();
        $bnfWaarde = 0;

        /** selectie van alle voorschriften per patient met patient_id * */

        $p = Doctrine_Query::create()
        ->from('adPrescription a')
        ->where('a.user_patient_id = ?', $patient_id)
        ->select('a.med_form_id', 'a.end_date')->execute();

        foreach($p as $prec):
            $d=$prec->getMedForm();
            $s = $d->getHlf();
            $n = $d->getMedBnfMedicine();

        if ($prec->getEndDate() !== null){

        $hlf = explode("-", $d->getHlf());   /** koppelteken als splitsing aangeduid tss twee waarden* */
        $Tijd = 5 * (($hlf[0])/ 60);        /** berekening met de tweede (hoogste) waarde uit de db(stel hln in uren)* */

        date_default_timezone_set('UTC');

        $today = mktime(date("H"), date("i"), date("s"), date("m"), date("d"), date("Y"));
        $end_date_prescription = $prec->getEndDate();
        $verschil= ($end_date_prescription-$today + 1)/86400;

        if ($verschil > 1){
        $bnfWaarde == $n[0]->getPercentage();
        } else {

            $bnfWaarde == $bnfWaarde + $n[0]->getMedBnfPercentage()->getPercentage();
        }
        } else {

            $bnfWaarde == $bnfwaarde + $n[0]->getMedBnfPercentage()->getPercentage();
        }

        endforeach;

        return $bnfWaarde;
    }
  public function getPrescriptions($id)
  {
    $q = Doctrine_Query::create()
    ->from('AdPrescription p')
    ->where('p.user_patient_id = ?', $id);
return $q->execute();
  }
  public function getNonPsycho(){
      return Doctrine_Query::create()->from('AdNonPsychoPat npp')->where('npp.ad_patient_id = ?',$this->getPatientId())->execute();
  }
  public function getAduserpatients(){
    $adUserPatients = Doctrine_Query::create()->from('AdUserPatient aup')->where('aup.patient_id = ?',$this->getPatientId())->execute();
    return $adUserPatients;
  }
}