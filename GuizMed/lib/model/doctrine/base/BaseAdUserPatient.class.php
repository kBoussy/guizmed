<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AdUserPatient', 'doctrine');

/**
 * BaseAdUserPatient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_patient_id
 * @property integer $patient_id
 * @property integer $user_id
 * @property integer $prev_user_id
 * @property integer $active
 * @property integer $denied
 * @property AdPatient $AdPatient
 * @property AdUser $AdUser
 * @property AdUser $AdUser_3
 * @property Doctrine_Collection $AdLog
 * @property Doctrine_Collection $AdPrescription
 * 
 * @method integer             getUserPatientId()   Returns the current record's "user_patient_id" value
 * @method integer             getPatientId()       Returns the current record's "patient_id" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method integer             getPrevUserId()      Returns the current record's "prev_user_id" value
 * @method integer             getActive()          Returns the current record's "active" value
 * @method integer             getDenied()          Returns the current record's "denied" value
 * @method AdPatient           getAdPatient()       Returns the current record's "AdPatient" value
 * @method AdUser              getAdUser()          Returns the current record's "AdUser" value
 * @method AdUser              getAdUser3()         Returns the current record's "AdUser_3" value
 * @method Doctrine_Collection getAdLog()           Returns the current record's "AdLog" collection
 * @method Doctrine_Collection getAdPrescription()  Returns the current record's "AdPrescription" collection
 * @method AdUserPatient       setUserPatientId()   Sets the current record's "user_patient_id" value
 * @method AdUserPatient       setPatientId()       Sets the current record's "patient_id" value
 * @method AdUserPatient       setUserId()          Sets the current record's "user_id" value
 * @method AdUserPatient       setPrevUserId()      Sets the current record's "prev_user_id" value
 * @method AdUserPatient       setActive()          Sets the current record's "active" value
 * @method AdUserPatient       setDenied()          Sets the current record's "denied" value
 * @method AdUserPatient       setAdPatient()       Sets the current record's "AdPatient" value
 * @method AdUserPatient       setAdUser()          Sets the current record's "AdUser" value
 * @method AdUserPatient       setAdUser3()         Sets the current record's "AdUser_3" value
 * @method AdUserPatient       setAdLog()           Sets the current record's "AdLog" collection
 * @method AdUserPatient       setAdPrescription()  Sets the current record's "AdPrescription" collection
 * 
 * @package    GuizMed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdUserPatient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ad_user_patient');
        $this->hasColumn('user_patient_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('patient_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('prev_user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('denied', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AdPatient', array(
             'local' => 'patient_id',
             'foreign' => 'patient_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('AdUser', array(
             'local' => 'user_id',
             'foreign' => 'user_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('AdUser as AdUser_3', array(
             'local' => 'prev_user_id',
             'foreign' => 'user_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('AdLog', array(
             'local' => 'user_patient_id',
             'foreign' => 'ad_user_patient_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('AdPrescription', array(
             'local' => 'user_patient_id',
             'foreign' => 'user_patient_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}