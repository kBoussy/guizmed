<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MedSubtype2', 'doctrine');

/**
 * BaseMedSubtype2
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $med_subtype2_id
 * @property string $name
 * @property Doctrine_Collection $MedType
 * 
 * @method integer             getMedSubtype2Id()   Returns the current record's "med_subtype2_id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method Doctrine_Collection getMedType()         Returns the current record's "MedType" collection
 * @method MedSubtype2         setMedSubtype2Id()   Sets the current record's "med_subtype2_id" value
 * @method MedSubtype2         setName()            Sets the current record's "name" value
 * @method MedSubtype2         setMedType()         Sets the current record's "MedType" collection
 * 
 * @package    GuizMed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedSubtype2 extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('med_subtype2');
        $this->hasColumn('med_subtype2_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'unique' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MedType', array(
             'local' => 'med_subtype2_id',
             'foreign' => 'med_subtype2_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}