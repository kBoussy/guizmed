<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MedBaseId', 'doctrine');

/**
 * BaseMedBaseId
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $med_base_id
 * @property string $mainclass
 * @property string $gen_name
 * @property string $speciality
 * @property integer $med_type_id
 * @property MedType $MedType
 * @property Doctrine_Collection $MedForm
 * 
 * @method integer             getMedBaseId()   Returns the current record's "med_base_id" value
 * @method string              getMainclass()   Returns the current record's "mainclass" value
 * @method string              getGenName()     Returns the current record's "gen_name" value
 * @method string              getSpeciality()  Returns the current record's "speciality" value
 * @method integer             getMedTypeId()   Returns the current record's "med_type_id" value
 * @method MedType             getMedType()     Returns the current record's "MedType" value
 * @method Doctrine_Collection getMedForm()     Returns the current record's "MedForm" collection
 * @method MedBaseId           setMedBaseId()   Sets the current record's "med_base_id" value
 * @method MedBaseId           setMainclass()   Sets the current record's "mainclass" value
 * @method MedBaseId           setGenName()     Sets the current record's "gen_name" value
 * @method MedBaseId           setSpeciality()  Sets the current record's "speciality" value
 * @method MedBaseId           setMedTypeId()   Sets the current record's "med_type_id" value
 * @method MedBaseId           setMedType()     Sets the current record's "MedType" value
 * @method MedBaseId           setMedForm()     Sets the current record's "MedForm" collection
 * 
 * @package    GuizMed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedBaseId extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('med_base_id');
        $this->hasColumn('med_base_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('mainclass', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('gen_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('speciality', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('med_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MedType', array(
             'local' => 'med_type_id',
             'foreign' => 'med_type_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('MedForm', array(
             'local' => 'med_base_id',
             'foreign' => 'med_base_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}