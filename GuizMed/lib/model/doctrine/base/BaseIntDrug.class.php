<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IntDrug', 'doctrine');

/**
 * BaseIntDrug
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $int_drug_id
 * @property string $name
 * @property integer $minor_less_potent
 * @property integer $potent
 * @property integer $pro_drug
 * @property integer $substrate
 * @property integer $inhibitor
 * @property integer $inducer
 * @property integer $brand_id
 * @property integer $int_enzym_id
 * @property integer $enzym_subgroup_id
 * @property IntEnzymBrand $IntEnzymBrand
 * @property IntEnzymSubgroup $IntEnzymSubgroup
 * @property IntEnzym $IntEnzym
 * 
 * @method integer          getIntDrugId()         Returns the current record's "int_drug_id" value
 * @method string           getName()              Returns the current record's "name" value
 * @method integer          getMinorLessPotent()   Returns the current record's "minor_less_potent" value
 * @method integer          getPotent()            Returns the current record's "potent" value
 * @method integer          getProDrug()           Returns the current record's "pro_drug" value
 * @method integer          getSubstrate()         Returns the current record's "substrate" value
 * @method integer          getInhibitor()         Returns the current record's "inhibitor" value
 * @method integer          getInducer()           Returns the current record's "inducer" value
 * @method integer          getBrandId()           Returns the current record's "brand_id" value
 * @method integer          getIntEnzymId()        Returns the current record's "int_enzym_id" value
 * @method integer          getEnzymSubgroupId()   Returns the current record's "enzym_subgroup_id" value
 * @method IntEnzymBrand    getIntEnzymBrand()     Returns the current record's "IntEnzymBrand" value
 * @method IntEnzymSubgroup getIntEnzymSubgroup()  Returns the current record's "IntEnzymSubgroup" value
 * @method IntEnzym         getIntEnzym()          Returns the current record's "IntEnzym" value
 * @method IntDrug          setIntDrugId()         Sets the current record's "int_drug_id" value
 * @method IntDrug          setName()              Sets the current record's "name" value
 * @method IntDrug          setMinorLessPotent()   Sets the current record's "minor_less_potent" value
 * @method IntDrug          setPotent()            Sets the current record's "potent" value
 * @method IntDrug          setProDrug()           Sets the current record's "pro_drug" value
 * @method IntDrug          setSubstrate()         Sets the current record's "substrate" value
 * @method IntDrug          setInhibitor()         Sets the current record's "inhibitor" value
 * @method IntDrug          setInducer()           Sets the current record's "inducer" value
 * @method IntDrug          setBrandId()           Sets the current record's "brand_id" value
 * @method IntDrug          setIntEnzymId()        Sets the current record's "int_enzym_id" value
 * @method IntDrug          setEnzymSubgroupId()   Sets the current record's "enzym_subgroup_id" value
 * @method IntDrug          setIntEnzymBrand()     Sets the current record's "IntEnzymBrand" value
 * @method IntDrug          setIntEnzymSubgroup()  Sets the current record's "IntEnzymSubgroup" value
 * @method IntDrug          setIntEnzym()          Sets the current record's "IntEnzym" value
 * 
 * @package    GuizMed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntDrug extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('int_drug');
        $this->hasColumn('int_drug_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('minor_less_potent', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('potent', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('pro_drug', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('substrate', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('inhibitor', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('inducer', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('brand_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('int_enzym_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('enzym_subgroup_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('IntEnzymBrand', array(
             'local' => 'brand_id',
             'foreign' => 'int_brand_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('IntEnzymSubgroup', array(
             'local' => 'enzym_subgroup_id',
             'foreign' => 'int_subgroup_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('IntEnzym', array(
             'local' => 'int_enzym_id',
             'foreign' => 'int_enzym_id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}